//
//  SyncInteractor.swift
//  NotesApp
//
//  Created by Сашок on 13.05.2022.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

protocol SyncBusinessLogic {
    func enableSync()
    func disableSync()
    func updateAuthenticationStatus()
}

protocol SyncDataStore {
    
}

class SyncInteractor: SyncBusinessLogic, SyncDataStore {
    var presenter: SyncPresentationLogic?
    var worker: SyncWorker?
    
    func enableSync() {
        worker = SyncWorker()
        worker?.enableAuthentication(completion: updateAuthenticationStatus)
    }
    
    func disableSync() {
        worker = SyncWorker()
        worker?.disableSynchronization()
        
        updateAuthenticationStatus()
    }
    
    func updateAuthenticationStatus() {
        worker = SyncWorker()

        let isAuthenticated = worker?.getAuthToken() != nil
        let response = Sync.UpdateAuthenticationStatus.Response(isAuthenticated: isAuthenticated)
        
        presenter?.presentAuthenticationStatus(response: response)
    }
}
