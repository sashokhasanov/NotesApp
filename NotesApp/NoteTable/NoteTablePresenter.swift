//
//  NoteTablePresenter.swift
//  NotesApp
//
//  Created by Сашок on 14.05.2022.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import Foundation

protocol NoteTablePresentationLogic {
    func presentNewNote(response: NoteTable.AddNote.Response)
    
    func interactorDidBeginDataUpdate()
    func interactorDidEndDataUpdate()
    func presentDataUpdate(response: NoteTable.UpdateData.Response)
    
    func interactorDidFinishFilteringNotes()
    
    func interactorDidFinishDataSynchronization()
    
    func getTableCellViewModel(note: NoteMO) -> NoteTable.CellViewModel
}

class NoteTablePresenter: NoteTablePresentationLogic {
    weak var viewController: NoteTableDisplayLogic?
    
    func presentNewNote(response: NoteTable.AddNote.Response) {
        let viewModel = NoteTable.AddNote.ViewModel(newNoteIndexPath: response.newNoteIndexPath)
        viewController?.displayNewNote(viewModel: viewModel)
    }
    
    func interactorDidBeginDataUpdate() {
        viewController?.onBeginDataUpdates()
    }
    
    func interactorDidEndDataUpdate() {
        viewController?.onEndDataUpdates()
    }
    
    func presentDataUpdate(response: NoteTable.UpdateData.Response) {
        let viewModel = NoteTable.UpdateData.ViewModel(
            updatekind: response.updatekind,
            indexPath: response.indexPath,
            newIndexPath: response.newIndexPath
        )
        
        viewController?.displayDataUpdate(viewModel: viewModel)
    }
    
    func interactorDidFinishFilteringNotes() {
        viewController?.onFinishFilteringNotes()
    }
    
    func interactorDidFinishDataSynchronization() {
        viewController?.onFinishDataSynchronization()
    }
    
    func getTableCellViewModel(note: NoteMO) -> NoteTable.CellViewModel {
        let title = note.title ?? ""
        let content = note.content ?? ""
        let color = note.color
        let pinned = note.pinned
        
        let viewModel = NoteTable.CellViewModel(title: title,
                                                content: content,
                                                color: color,
                                                pinned: pinned)
        return viewModel
    }
}
